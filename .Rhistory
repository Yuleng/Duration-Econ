(hold$ccode2==countrycode(365,"cown","country.name") & hold$year >1815 & hold$year < 1918) |
(hold$ccode2==countrycode(365,"cown","country.name") & hold$year >1921 & hold$year < 2017) |
(hold$ccode2==countrycode(710,"cown","country.name") & hold$year >1949 & hold$year < 2017) |
(hold$ccode2==countrycode(740,"cown","country.name") & hold$year >1894 & hold$year < 1946) |
(hold$ccode2==countrycode(740,"cown","country.name") & hold$year >1990 & hold$year < 2017),
1, 0)
summary(centdist)
head(centdist)
## distance 1946-2015
hold <- merge(hold, capdist, by=c("ccode1","ccode2","year"), all.x=TRUE)
hold <- merge(hold, centdist, by=c("ccode1","ccode2","year"), all.x=TRUE)
hold <- merge(hold, mindist, by=c("ccode1","ccode2","year"), all.x=TRUE)
## Read trade data
load("D:/DATA/TRADE/COW/trade.RData")
holdB <- merge(hold, tradeB,by=c("ccode1","ccode2","year"), all.x=TRUE)
holdG <- merge(hold, tradeG,by=c("ccode1","ccode2","year"), all.x=TRUE)
rm(tradeB, tradeG) # remove the raw data
?tmerge
dur$dur <- dur$maxdur
dur <- dur[,c("id","dur","status")]
dur <- tmerge(dur, dur, id=id, quit=event(dur,status)) # set the range
durB <- tmerge(dur, holdB, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), contiguity=tdc(day,contiguity),
alliance=tdc(day,alliance),igo=tdc(IGOTally),
powerratio=tdc(day,powerratio))
durG <- tmerge(dur, holdG, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), contiguity=tdc(day,contiguity),
alliance=tdc(day,alliance),igo=tdc(IGOTally),
powerratio=tdc(day,powerratio))
summary(hold)
## now assemble the data into having time varying covariates
dur$dur <- dur$maxdur
dur <- dur[,c("id","dur","cens")] ## if doing competing risks may change this to status?
dur <- tmerge(dur, dur, id=id, quit=event(dur,cens)) # set the range
durB <- tmerge(dur, holdB, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), conttype=tdc(day,conttype), contbinary=tdc(day,contbinary),
alliance=tdc(day,alliance),igo=tdc(day, jointmemtotal), affinity=tdc(day,affinity),
powerratio=tdc(day,powerratio))
durG <- tmerge(dur, holdG, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), conttype=tdc(day,conttype), contbinary=tdc(day,contbinary),
alliance=tdc(day,alliance),igo=tdc(day,jointmemtotal), affinity=tdc(day,affinity),
powerratio=tdc(day,powerratio))
summary(durB)
## save the data
save(durB,durG, file="C:/Users/YULENG/OneDrive/Documents/R Programming/DurationPaper/DurationTimeCov_v1.RData")
## load time dependent covariates
load("C:/Users/YULENG/OneDrive/Documents/R Programming/DurationPaper/DurationTimeCov_v1.RData")
tdData <- durB
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
## check time dependent coefficient
cox.zph(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+conttype+alliance+powerratio, data=tdData);summary(fit1)
## check time dependent coefficient
cox.zph(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+contbinary+alliance+powerratio, data=tdData);summary(fit1)
## check time dependent coefficient
cox.zph(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+igo+powerratio, data=tdData);summary(fit1)
## check time dependent coefficient
cox.zph(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+affinity+powerratio, data=tdData);summary(fit1)
## check time dependent coefficient
cox.zph(fit1)
library(survival)
## read mid data from gml 1816-2010
mid <- read.csv("D:/DATA/COW/MID/GML-MID/gml-ddy.csv")[,c("ccode1","ccode2","year","mindur","maxdur","outcome")]
mid <- na.omit(mid)
## simply count side A quitting outcome 3 as not sensoring the rest as censoring
mid$cens <- ifelse(mid$outcome==3, 1, 0) # censor as 0
dur <- subset(mid,select=-outcome)
library(countrycode)
dur$ccode1 <- countrycode(dur$ccode1, "cown", "country.name")
dur$ccode2 <- countrycode(dur$ccode2, "cown", "country.name")
dur$id <- paste(dur$ccode1,dur$ccode2,dur$year)
## creating a dataset to hold covariates from the duration dataset
pool <- dur[,c("id","ccode1","ccode2","year","maxdur")]
hold <- data.frame()
for (i in 1:nrow(pool)){
temp = pool[i,]
temp = cbind(temp[,c("id","ccode1","ccode2")],
dur=temp$maxdur,
year=temp$year+0:floor(temp$maxdur/365.25),
day=365.25*(0:floor(temp$maxdur/365.25))+1)
hold = rbind(hold,temp); rm(temp)
}
load("D:/DATA/COW/COWPolityControls2017.RData")
##########################
## democracy
##########################
## polity 1800-2015
polity$ccode2 <- polity$ccode1; polity$demo1 <- polity$polity2; polity$demo2 <- polity$polity2
## MERGE with hold
hold <- merge(hold, polity[,c("ccode1","year","demo1")], by=c("ccode1","year"), all.x=TRUE)
hold <- merge(hold, polity[,c("ccode2","year","demo2")], by=c("ccode2","year"), all.x=TRUE)
##########################
## inter-state relation
##########################
## alliance 1816-2012
hold <- merge(hold, allydyad, by=c("ccode1","ccode2","year"), all.x=TRUE)
## igo 1820-2005
hold <- merge(hold, igodyad, by=c("ccode1","ccode2","year"), all.x=TRUE)
## affinity 1946-2008
library(foreign)
affin <- read.dta("D:/DATA/POLICY PREFERENCE/affinity_01242010.dta")[,c("s3un4608","year","ccodea","ccodeb")]
affin$ccode1 <- countrycode(affin$ccodea,"cown","country.name")
affin$ccode2 <- countrycode(affin$ccodeb,"cown","country.name")
affin$affinity <-affin$s3un4608
affin <- subset(affin, select=c(ccode1, ccode2, year, affinity))
hold <- merge(hold, affin, by=c("ccode1","ccode2","year"), all.x=TRUE)
#######################
## distance
#######################
## contiguity 1816-2016
hold <- merge(hold, contiguity[,c("ccode1","ccode2","year","conttype")], by=c("ccode1","ccode2","year"), all.x=TRUE)
hold[hold$year>1815 & hold$year<2017 & is.na(hold$conttype),]$conttype <- 6 # following Slantchev code noncontiguous as 6
hold$contbinary <- ifelse(hold$conttype==6, 0, 1)
## distance 1946-2015
hold <- merge(hold, capdist, by=c("ccode1","ccode2","year"), all.x=TRUE)
hold <- merge(hold, centdist, by=c("ccode1","ccode2","year"), all.x=TRUE)
hold <- merge(hold, mindist, by=c("ccode1","ccode2","year"), all.x=TRUE)
#########################
## power
########################
## national capability 1816-2012
cinc$ccode2 <- cinc$ccode1; cinc$cinc1 <- cinc$cinc; cinc$cinc2 <- cinc$cinc
hold <- merge(hold, cinc[,c("ccode1","year","cinc1")], by=c("ccode1","year"), all.x=TRUE)
hold <- merge(hold, cinc[,c("ccode2","year","cinc2")], by=c("ccode2","year"), all.x=TRUE)
library(plyr)
## curate the data a bit: adding alliance total; calculate powerratio
hold$alliance <- rowSums(hold[,c("defense","nonaggression","neutrality")],na.rm=TRUE) # excluding entente because it is of much less significance
hold$powerratio <- log(hold$cinc1/hold$cinc2+1)
## major power status
library(countrycode)
hold$major1 <- ifelse((hold$ccode1==countrycode(2,"cown","country.name") & hold$year >1897 & hold$year < 2017) |
(hold$ccode1==countrycode(200,"cown","country.name") & hold$year >1815 & hold$year < 2017) |
(hold$ccode1==countrycode(220,"cown","country.name") & hold$year >1815 & hold$year < 1941) |
(hold$ccode1==countrycode(220,"cown","country.name") & hold$year >1944 & hold$year < 2017) |
(hold$ccode1==countrycode(255,"cown","country.name") & hold$year >1815 & hold$year < 1919) |
(hold$ccode1==countrycode(255,"cown","country.name") & hold$year >1924 & hold$year < 1946) |
(hold$ccode1==countrycode(255,"cown","country.name") & hold$year >1990 & hold$year < 2017) |
(hold$ccode1==countrycode(300,"cown","country.name") & hold$year >1815 & hold$year < 1919) |
(hold$ccode1==countrycode(325,"cown","country.name") & hold$year >1859 & hold$year < 1944) |
(hold$ccode1==countrycode(365,"cown","country.name") & hold$year >1815 & hold$year < 1918) |
(hold$ccode1==countrycode(365,"cown","country.name") & hold$year >1921 & hold$year < 2017) |
(hold$ccode1==countrycode(710,"cown","country.name") & hold$year >1949 & hold$year < 2017) |
(hold$ccode1==countrycode(740,"cown","country.name") & hold$year >1894 & hold$year < 1946) |
(hold$ccode1==countrycode(740,"cown","country.name") & hold$year >1990 & hold$year < 2017),
1, 0)
hold$major2 <- ifelse((hold$ccode2==countrycode(2,"cown","country.name") & hold$year >1897 & hold$year < 2017) |
(hold$ccode2==countrycode(200,"cown","country.name") & hold$year >1815 & hold$year < 2017) |
(hold$ccode2==countrycode(220,"cown","country.name") & hold$year >1815 & hold$year < 1941) |
(hold$ccode2==countrycode(220,"cown","country.name") & hold$year >1944 & hold$year < 2017) |
(hold$ccode2==countrycode(255,"cown","country.name") & hold$year >1815 & hold$year < 1919) |
(hold$ccode2==countrycode(255,"cown","country.name") & hold$year >1924 & hold$year < 1946) |
(hold$ccode2==countrycode(255,"cown","country.name") & hold$year >1990 & hold$year < 2017) |
(hold$ccode2==countrycode(300,"cown","country.name") & hold$year >1815 & hold$year < 1919) |
(hold$ccode2==countrycode(325,"cown","country.name") & hold$year >1859 & hold$year < 1944) |
(hold$ccode2==countrycode(365,"cown","country.name") & hold$year >1815 & hold$year < 1918) |
(hold$ccode2==countrycode(365,"cown","country.name") & hold$year >1921 & hold$year < 2017) |
(hold$ccode2==countrycode(710,"cown","country.name") & hold$year >1949 & hold$year < 2017) |
(hold$ccode2==countrycode(740,"cown","country.name") & hold$year >1894 & hold$year < 1946) |
(hold$ccode2==countrycode(740,"cown","country.name") & hold$year >1990 & hold$year < 2017),
1, 0)
## Read trade data
load("D:/DATA/TRADE/COW/trade.RData")
holdB <- merge(hold, tradeB,by=c("ccode1","ccode2","year"), all.x=TRUE)
holdG <- merge(hold, tradeG,by=c("ccode1","ccode2","year"), all.x=TRUE)
rm(tradeB, tradeG) # remove the raw data
## now assemble the data into having time varying covariates
dur$dur <- dur$maxdur
dur <- dur[,c("id","dur","cens")] ## if doing competing risks may change this to status?
dur <- tmerge(dur, dur, id=id, quit=event(dur,cens)) # set the range
durB <- tmerge(dur, holdB, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), conttype=tdc(day,conttype), contbinary=tdc(day,contbinary),
alliance=tdc(day,alliance),igo=tdc(day, jointmemtotal), affinity=tdc(day,affinity),
powerratio=tdc(day,powerratio))
durG <- tmerge(dur, holdG, id=id,
tradedepend1=tdc(day,tradedepend1), tradedepend2=tdc(day,tradedepend2),
tradeshare1=tdc(day,tradeshare1), tradeshare2=tdc(day,tradeshare2),
tradeopen1=tdc(day,tradeopen1), tradeopen2=tdc(day,tradeopen2),
demo1=tdc(day,demo1), demo2=tdc(day,demo2),
major1=tdc(day,major1), major2=tdc(day,major2),
mindist=tdc(day,mindist), conttype=tdc(day,conttype), contbinary=tdc(day,contbinary),
alliance=tdc(day,alliance),igo=tdc(day,jointmemtotal), affinity=tdc(day,affinity),
powerratio=tdc(day,powerratio))
save(durB,durG, file="C:/Users/YULENG/OneDrive/Documents/R Programming/DurationPaper/DurationTimeCov_v1.RData")
load("C:/Users/YULENG/OneDrive/Documents/R Programming/DurationPaper/DurationTimeCov_v1.RData")
tdData <- durB
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
cox.zph(fit1) ## indicate demo1 demo2 mindist should have time varying impacts
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+igo+powerratio, data=tdData);summary(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+affinity+powerratio, data=tdData);summary(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+conttype+alliance+powerratio, data=tdData);summary(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+contbinary+alliance+powerratio, data=tdData);summary(fit1)
## consider time dependent coefficients
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+mindist+alliance+powerratio, data=tdData);summary(fit1)
cox.zph(fit1) ## indicate demo1 demo2 mindist should have time varying impacts
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
cox.zph(fit1)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+tt(mindist)+alliance+igo+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+tt(mindist)+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
cox.zph(fit1t) ## still some demo1 demo2 but gengerally no time varying impacts for all other variables
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+major1+major2, data=tdData);summary(fit1)
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance, data=tdData);summary(fit1)
## add time dep effect by demos
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
## check again
cox.zph(fit1t)
tdData <- durG
## run preliminary test
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
## mindist can be rerun by conttype, contbinary
## alliance can be rerun by igo, affinity
## powerratio can be rerun by major1+major2
## check time dependent coefficient
cox.zph(fit1) ## indicate demo1 demo2 mindist should have time varying impacts
## add time dep effect by demos
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
## check again
cox.zph(fit1t)
?spline
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2)+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2,4)+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2)+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t})
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2)+demo1+demo2 +mindist+alliance+powerratio, data=tdData)
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2,df=3)+demo1+demo2 +mindist+alliance+powerratio, data=tdData)
termplot(fit1s,term=2)
termplot(fit1s,term=2, se=TRUE)
termplot(fit1s,term=2)
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2,df=3) +mindist+alliance+powerratio, data=tdData)
termplot(fit1s,term=2)
termplot(fit1s,term=2,se=T)
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2)+demo1+demo2+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t})
termplot(fit1s,term=2) # se=TRUE
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2)+demo1+demo2+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t})
termplot(fit1s,term=2, se=TRUE)
## Add splines for tradeshare 2 because the model indicates its impacts may vary
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2, df=3)+demo1+demo2+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t})
termplot(fit1s,term=2)
?termplot
## Add splines for tradeshare 2 because the model indicates its impacts may vary
fit1s <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+pspline(tradeshare2, df=3)+demo1+demo2+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t})
termplot(fit1s,term=2,xlim=c(0.00001,0.6))
## This is the Rcode for testing the duration paper
library(survival)
## load time dependent covariates data
load("C:/Users/YULENG/OneDrive/Documents/R Programming/DurationPaper/DurationTimeCov_v1.RData")
tdData <- durB # change to durG for robustness check
## run preliminary test
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
## mindist can be rerun by conttype, contbinary
## alliance can be rerun by igo, affinity
## powerratio can be rerun by major1+major2
## check time dependent coefficient
cox.zph(fit1)
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(c(0.00001,0.3), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
library(survminer)
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(c(0.00001,0.3), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
?ggforest
ggforest(fit1)
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
fit1 <- coxph(Surv(tstart, tstop, quit) ~ tradedepend1+tradedepend2+demo1+demo2+mindist+alliance+powerratio, data=tdData);summary(fit1)
## Plot the impact of tradeshare1
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(c(0.00001,0.3), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
summary(newdt1)
summary(temp)
quantile(temp[,1],na.rm=TRUE,probs=c(0.01,5))
quantile(temp[,1],na.rm=TRUE,probs=c(0.01,0.5))
quantile(temp[,1],na.rm=TRUE,probs=c(0.01,0.75))
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.01,.75)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
## Plot the impact of tradeshare1
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.01,.95)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.01,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.01,.999)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.01,.9)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
## Plot the impact of tradeshare1
temp <- as.data.frame(model.matrix(fit1))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+strata(demo1)+strata(demo2)+mindist+alliance+powerratio, data=tdData);summary(fit1t)
## check again
cox.zph(fit1t)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradedepend1+tradedepend2+strata(demo1)+strata(demo2)+mindist+alliance+powerratio, data=tdData);summary(fit1t)
## check again
cox.zph(fit1t)
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1t, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
## use stratification instead of interacting with time given I have no interest in demo
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+strata(demo1)+strata(demo2)+mindist+alliance+powerratio, data=tdData);summary(fit1t)
## check again
cox.zph(fit1t)
## plot the impact of tradeshare 1
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1t, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
warnings()
sfit <- survfit(fit1t)
plot(sfit, mark.time=FALSE, col=pal(4), lwd=3, fun=function(x) log(-log(x)), xmax=1.5, bty='n', las=1,
xlab='Time (years)', ylab=expression(log(Lambda(t))))
toplegend(legend=levels(veteran$celltype), lwd=3, col=pal(4))
## use stratification instead of interacting with time given I have no interest in demo
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+strata(demo1)+strata(demo2)+mindist+alliance+powerratio, data=tdData);summary(fit1t)
## check again
cox.zph(fit1t)
sfit <- survfit(fit1t)
plot(sfit, mark.time=FALSE, col=pal(4), lwd=3, fun=function(x) log(-log(x)), xmax=1.5, bty='n', las=1,
xlab='Time (years)', ylab=expression(log(Lambda(t))))
toplegend(legend=levels(veteran$celltype), lwd=3, col=pal(4))
source("http://myweb.uiowa.edu/pbreheny/7210/f15/notes/fun.R")
sfit <- survfit(fit1t)
plot(sfit, mark.time=FALSE, col=pal(4), lwd=3, fun=function(x) log(-log(x)), xmax=1.5, bty='n', las=1,
xlab='Time (years)', ylab=expression(log(Lambda(t))))
toplegend(legend=levels(veteran$celltype), lwd=3, col=pal(4))
## add time dep effect by demos
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
## check again
cox.zph(fit1t)
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
## check again
cox.zph(fit1t)
# Effect plot function (for slides 13-20)
effectPlot <- function(fit, t, fun, term, ...) {
b <- coef(fit)
y <- lwr <- upr <- numeric(length(t))
for (i in 1:length(t)) {
delta <- rep(0, length(b))
names(delta) <- names(b)
delta[term] <- 1
delta[paste0('tt(', term, ')')] <- fun(t[i])
y[i] <- delta %*% coef(fit)
v <- delta %*% vcov(fit) %*% delta
lwr[i] <- y[i] + qnorm(.025)*sqrt(v)
upr[i] <- y[i] + qnorm(.975)*sqrt(v)
}
plot(t, y, ylim=range(c(lwr, upr)), type='l', las=1, bty='n', ...)
polygon(c(t, rev(t)), c(lwr, rev(upr)), col='gray85', border=NA)
lines(t, y, lwd=3)
abline(h=0, col='gray', lwd=2, lty=2)
}
effectPlot(fit1t, seq(0, 1999, len=2000), as.numeric, 'tradeshare1', xlab='Time (Days)', ylab='Treatment effect')
## add time dep effect by demos
fit1t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData, tt=function(x, t, ...) {x*t});summary(fit1t)
## check again
cox.zph(fit1t)
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
summary(newdt1)
table(newdt1$tradeshare1)
## plot the impact of tradeshare 1
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
## plot the impact of tradeshare 1
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit1t, data = newdt1, fun = "pct", xlim=c(0,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
summary(newdt1)
fit2t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=tdData);summary(fit1)
fit2t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo2+tt(demo1)+tt(demo2)+mindist+alliance+powerratio, data=temp);summary(fit1)
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
?model.matrix
temp <- as.data.frame(model.matrix(fit1t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
pred <- survfit(fit1t, newdt1)
summary(tdData)
?cph
tdData$demo1_time = demo1*tstart; tdData$demo2_time = demo2*tstart
fit2t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo1_time+demo2+demo2_time+mindist+alliance+powerratio, data=tdData);summary(fit2t)
## check again
cox.zph(fit2t)
tdData$demo1_time = tdData$demo1*tdData$tstart; tdData$demo2_time = tdData$demo2*tdData$tstart
fit2t <- coxph(Surv(tstart, tstop, quit) ~ tradeshare1+tradeshare2+demo1+demo1_time+demo2+demo2_time+mindist+alliance+powerratio, data=tdData);summary(fit2t)
## check again
cox.zph(fit2t)
temp <- as.data.frame(model.matrix(fit2t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct",
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit2t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.5,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit2t))
newdt1 <- cbind(rep(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.7,.99)), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
?round
temp <- as.data.frame(model.matrix(fit2t))
newdt1 <- cbind(rep(round(quantile(temp[,1],na.rm=TRUE,probs=c(.001,.7,.99)),digit=4), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
temp <- as.data.frame(model.matrix(fit2t))
newdt1 <- cbind(rep(c(0.001,0.1,0.3), each=dim(temp)[1]),
rbind(temp[,-1],temp[,-1],temp[,-1]))
names(newdt1) <- names(temp)
ggcoxadjustedcurves(fit2t, data = newdt1, fun = "pct", xlim=c(1,quantile(tdData$dur, na.rm=TRUE, probs=.75)),
legend.title="trade", variable = newdt1[,1])
ggforest(fit2t)
?ggforest
ggcoxzph(fit2t)
ggcoxdiagnostics(fit2t)
ggcoxzph(fit1t)
ggcoxzph(fit1)
